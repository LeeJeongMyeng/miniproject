<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.project.sample.dao.FleamarketDao">
    <insert id="reg_FleaMarket" parameterType="FleamarketDto" >
        INSERT INTO FLEAMARKET VALUES (
         0,
         #{userno,jdbcType=VARCHAR},
         #{email,jdbcType=VARCHAR},
         #{title,jdbcType=VARCHAR},
         #{content,jdbcType=VARCHAR},
         #{address,jdbcType=VARCHAR},
         #{detailAddress,jdbcType=VARCHAR},
         #{approvalCnt,jdbcType=NUMERIC},
         #{curCnt,jdbcType=NUMERIC},
         #{endDate,jdbcType=VARCHAR},
         SYSDATE(),
         SYSDATE()
       )
    </insert>

    <select id="FleaMarket_get_fno_max" resultType="_int">
        select max(FNO) from FLEAMARKET
    </select>

    <insert id="reg_FleaMarket_file" parameterType="FleamarketDto">
        INSERT INTO FLEAMARKET_FILES VALUES (
        #{fno,jdbcType=NUMERIC},
        #{origin_file_name,jdbcType=VARCHAR},
        #{uuid_file_name,jdbcType=VARCHAR}
        )
    </insert>


    <!-- 메이페이지  -->
    <select id="get_FleaMarket_List" parameterType="FleamarketDto" resultType="FleamarketDto">
        <![CDATA[

        SELECT
            (@rownum := @rownum + 1) as ROWNUM,
            F.*,
            MIN(F2.UUID_FILE_NAME) AS UUID_FILE_NAME
        FROM (SELECT  FNO,
                      TITLE,
                      SUBSTRING_INDEX(ADDRESS, ' ', 3) as ADDRESS,
                      CURCNT,
                      date_format(REGDATE,'%Y-%m-%d') REGDATE,
                      APPROVALCNT,ENDDATE,
                        CASE WHEN STR_TO_DATE(ENDDATE, '%Y-%m-%d') < CURDATE() THEN '모집종료'
                        ELSE '모집중'
                        END AS STATE
                      FROM FLEAMARKET
                            -- 조건절
                      WHERE CONCAT(TITLE,ADDRESS,DETAILADDRESS) LIKE  CONCAT('%',#{title,jdbcType=VARCHAR},'%')
                      ORDER BY REGDATE DESC,STR_TO_DATE(ENDDATE, '%Y-%m-%d') ASC

             ) AS F LEFT JOIN (
            SELECT FILES.FNO, FILES.UUID_FILE_NAME
            FROM FLEAMARKET_FILES FILES
            ORDER BY FILES.UUID_FILE_NAME
        ) AS F2 ON F.FNO = F2.FNO,
             (SELECT @rownum := 0) r
        GROUP BY F.FNO
        HAVING ROWNUM BETWEEN #{st_rownum,jdbcType=NUMERIC} and #{en_rownum,jdbcType=NUMERIC}
        ORDER BY ROWNUM

        ]]>
    </select>


    <select id="get_FleaMarket_totCnt" parameterType="FleamarketDto" resultType="_int">
        SELECT COUNT(*) FROM FLEAMARKET
        WHERE CONCAT(TITLE,ADDRESS,DETAILADDRESS) LIKE CONCAT('%',#{title,jdbcType=VARCHAR},'%')
    </select>
    <!-- 상세조회 게시글-->
    <select id="get_FleaMarket" parameterType="_int" resultType="FleamarketDto">
        <![CDATA[

        SELECT *,
               CASE WHEN STR_TO_DATE(ENDDATE, '%Y-%m-%d') < CURDATE() THEN '모집종료'
                ELSE '모집중'
                END AS STATE
        FROM FLEAMARKET
        WHERE fno = #{fno,jdbcType=NUMERIC}

        ]]>
    </select>

    <select id="get_FleaMarket_files" parameterType="_int" resultType="Fleamarket_Files">
        SELECT * FROM FLEAMARKET_FILES
        WHERE fno = #{fno,jdbcType=NUMERIC}
    </select>

    <delete id="del_FleaMarket" parameterType="_int">
        DELETE FROM FLEAMARKET WHERE FNO = #{fno,jdbcType=NUMERIC};
    </delete>

    <delete id="del_FleaMarket_files" parameterType="_int">
        DELETE FROM FLEAMARKET_FILES WHERE FNO = #{fno,jdbcType=NUMERIC};
    </delete>

    <update id="upt_FleaMarket" parameterType="FleamarketDto">
        UPDATE FLEAMARKET
        SET  title = #{title,jdbcType=VARCHAR},
             content = #{content,jdbcType=VARCHAR},
             ADDRESS = #{address,jdbcType=VARCHAR},
             DETAILADDRESS = #{detailAddress,jdbcType=VARCHAR},
             APPROVALCNT = #{approvalCnt,jdbcType=NUMERIC},
             ENDDATE = date_format(#{endDate,jdbcType=VARCHAR},'%Y-%m-%d'),
             UPTDATE = date_format(sysdate(),'%Y-%m-%d')
        WHERE fno = #{fno,jdbcType=NUMERIC}
    </update>

    <insert id="application_FM" parameterType="HashMap">
        INSERT INTO APPLICATION_FM VALUES (
             0,  -- 신청번호
             #{fno,jdbcType=NUMERIC},
             #{userno,jdbcType=VARCHAR},
             sysdate(),
            '대기'
        )
    </insert>
     <!-- 중복신청 확인용 -->
    <select id="Check_Application" parameterType="HashMap" resultType="_int">
        SELECT  count(*)
        from APPLICATION_FM
        WHERE FNO = #{fno,jdbcType=NUMERIC} AND userno = #{userno,jdbcType=VARCHAR}
    </select>
        <!-- 게시글 삭제시 신청글도 삭제 -->
    <delete id="del_Application_FM" parameterType="_int">
        DELETE
        FROM APPLICATION_FM
        WHERE FNO = #{fno,jdbcType=NUMERIC}
    </delete>

<!--    특정 fno(글번호)에 대해 신청자(승인/대기/거절) 인원들고오기-->
    <select id="get_application_FM" parameterType="Application_FM" resultType="Application_FM">
        select AF.USERNO,AF.REGDATE,CM.NAME,CM.EMAIL,CM.ADDRESS,CM.PHONENUMBER
        from APPLICATION_FM AS AF
        INNER JOIN CTG_MEMBER AS CM ON AF.USERNO = CM.USERNO
        WHERE AF.FNO = #{fno,jdbcType=NUMERIC} and AF.STATE = #{state,jdbcType=VARCHAR};
    </select>

    <!-- 신청한 회원의 상태값 변경(수락/거절/대기)   -->
    <update id="upt_application_FM" parameterType="Application_FM">
        update APPLICATION_FM SET
            STATE = #{state,jdbcType=VARCHAR}
        WHERE FNO = #{fno,jdbcType=NUMERIC}
          AND USERNO = #{userno,jdbcType=VARCHAR}
    </update>

<!--    현재승인인원 수-->
    <select id="get_Application_count" parameterType="_int">
        SELECT COUNT(*) FROM APPLICATION_FM
        WHERE FNO = #{fno,jdbcType=NUMERIC}
          AND STATE = '승인'
    </select>
<!--    현재 특정글의 승인갯수 업데이트-->
    <update id="upt_apl_FM_Count" parameterType="Application_FM">
        UPDATE
            FLEAMARKET
        SET
            CURCNT = #{count,jdbcType=NUMERIC}
        WHERE
            FNO = #{fno,jdbcType=NUMERIC}
    </update>

    <!-- 내가 쓴 플리마켓 갯수 -->
    <select id="get_My_FleaMarket_Count" parameterType="FleamarketDto" resultType="_int">
        SELECT
            COUNT(*)
        FROM
            FLEAMARKET
        WHERE
            USERNO = #{userno,jdbcType=VARCHAR}
    </select>

<!--내가 쓴 플리마켓글 조회-->
    <select id="get_My_FleaMarket" parameterType="FleamarketDto" resultType="FleamarketDto">

        SELECT * FROM (
                  SELECT
                      (@rownum := @rownum + 1) as ROWNUM, F.*
                  FROM
                      (SELECT @rownum := 0) r, FLEAMARKET AS F
                  WHERE
                      F.USERNO = #{userno,jdbcType=VARCHAR}
                  ORDER BY
                      FNO
              ) AS T
        WHERE
            ROWNUM BETWEEN #{st_rownum,jdbcType=NUMERIC} and #{en_rownum,jdbcType=NUMERIC}
    </select>
    <!-- 내가 신청한 글 갯수 -->
    <select id="get_My_Application_Count" parameterType="FleamarketDto" resultType="_int">
        SELECT
            COUNT(*)
        FROM
            APPLICATION_FM
        WHERE USERNO = #{userno,jdbcType=VARCHAR}
    </select>

    <select id="get_My_Application" parameterType="FleamarketDto" resultType="FleamarketDto">
        <![CDATA[
        SELECT * from
            (SELECT
                 (@rownum := @rownum + 1) as ROWNUM,T.*
             FROM
               (SELECT
                    F.FNO,
                    F.TITLE,
                    F.ADDRESS,
                    F.CURCNT,
                    F.APPROVALCNT,
                    A.STATE,
                    CASE WHEN
                         STR_TO_DATE(F.ENDDATE, '%Y-%m-%d') < CURDATE()
                     THEN '모집종료'
                     ELSE '모집중'
                     END AS FSTATE
                 FROM
                    APPLICATION_FM AS A
                 INNER JOIN
                    FLEAMARKET F
                 ON
                    A.FNO = F.FNO
                 WHERE
                    A.USERNO = #{userno,jdbcType=VARCHAR}
                 ORder by
                     FNO
                 ) AS T,
            (SELECT @ROWNUM:=0) r) AS a
        where rownum BETWEEN #{st_rownum,jdbcType=NUMERIC} and #{en_rownum,jdbcType=NUMERIC}
        ]]>
    </select>
</mapper>